stages:
- build
- test
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml

.docker-build:
  image: docker:latest
  stage: build
  services:
  - docker:dind
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
  - |
    if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
      tag=""
      echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
    else
      tag=":$CI_COMMIT_REF_SLUG"
      echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
    fi
  - docker build --pull -t "$CI_REGISTRY_IMAGE/$CONTAINER_NAME${tag}" "$BUILD_PATH"
  - docker push "$CI_REGISTRY_IMAGE/$CONTAINER_NAME${tag}"
  rules:
  - if: $CI_COMMIT_BRANCH
    exists:
    - $BUILD_PATH/Dockerfile

build-python:
  extends: .docker-build
  variables:
    BUILD_PATH: docker/python/
    CONTAINER_NAME: python

build-cloc:
  extends: .docker-build
  variables:
    BUILD_PATH: docker/cloc/
    CONTAINER_NAME: cloc
