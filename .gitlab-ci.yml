include:
- template: Security/SAST.gitlab-ci.yml

stages:
- build
- lint
- test
- deploy

variables:
  DOCKER_DIR: docker

flake8:
  image: python:3.10
  stage: lint
  script:
    - pip install flake8
    - flake8 git-slice/
  only:
    - merge_requests

unittest:
  image: python:3.10
  stage: test
  script:
    - pip install -r test_requirements.txt
    - python -m unittest discover -s git-slice/ -t git-slice/
  rules:
    - when: always

sast:
  stage: test

build-python:
  extends: .docker-build
  variables:
    CONTAINER_NAME: python

build-cloc:
  extends: .docker-build
  variables:
    CONTAINER_NAME: cloc

.docker-build:
  image: docker:latest
  stage: build
  services:
  - docker:dind
  before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
  - |
    if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
      tag=""
      echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
    else
      tag=":$CI_COMMIT_REF_SLUG"
      echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
    fi
  - docker build --pull -t "$CI_REGISTRY_IMAGE/$CONTAINER_NAME${tag}" "$DOCKER_DIR/$CONTAINER_NAME"
  - docker push "$CI_REGISTRY_IMAGE/$CONTAINER_NAME${tag}"
  rules:
  - if: $CI_COMMIT_BRANCH
    exists:
    - $DOCKER_DIR/$CONTAINER_NAME/Dockerfile

pages:
  stage: deploy
  script:
  - pip install -r requirements.txt -r dev_requirements.txt
  - cd docs/
  - sphinx-build -b html . public
  artifacts:
    paths:
    - docs/public
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
